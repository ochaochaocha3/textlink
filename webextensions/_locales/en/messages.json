{
  "extensionName": { "message": "Text Link (WE)" },
  "extensionDescription": { "message": "Allows URI texts written in webpages to be loaded by double clicks." },

  "menu.waiting.label": { "message": "Finding URIs in Selection… ($PROGRESS$%)",
    "placeholders": {
      "progress": { "content": "$1", "example": "100" }
    }},
  "menu.group.single": { "message": "URI in Selection: \"$URI$\"",
    "placeholders": {
      "count": { "content": "$1", "example": "1" },
      "uri": { "content": "$2", "example": "http://example.net/" }
    }},
  "menu.group.multiple": { "message": "$COUNT$ URIs in Selection: \"$FIRST_URI$\" ~ \"$LAST_URI$\"",
    "placeholders": {
      "count": { "content": "$1", "example": "1" },
      "first_uri": { "content": "$2", "example": "http://example.com/" },
      "last_uri": { "content": "$3", "example": "http://example.net/" }
    }},
  "menu.direct.single": { "message": "$TITLE$: \"$URI$\"",
    "placeholders": {
      "title": { "content": "$1", "example": "Open" },
      "uri": { "content": "$3", "example": "http://example.net/" }
    }},
  "menu.direct.multiple": { "message": "$TITLE$: \"$FIRST_URI$\" ~ \"$LAST_URI$\"",
    "placeholders": {
      "title": { "content": "$1", "example": "Open" },
      "first_uri": { "content": "$2", "example": "http://example.com/" },
      "last_uri": { "content": "$3", "example": "http://example.net/" }
    }},
  "menu.openCurrent.single":   { "message": "Open" },
  "menu.openCurrent.multiple": { "message": "Open All" },
  "menu.openTab.single":       { "message": "Open in New Tab" },
  "menu.openTab.multiple":     { "message": "Open All in New Tabs" },
  "menu.openWindow.single":    { "message": "Open in New Window" },
  "menu.openWindow.multiple":  { "message": "Open All in New Windows" },
  "menu.copy.single":          { "message": "Copy" },
  "menu.copy.multiple":        { "message": "Copy All" },
  "shortURI": { "message": "$URI$…",
    "placeholders": {
      "uri": { "content": "$1", "example": "http://example.com/" }
    }},


  "config.action.caption": { "message": "Actions" },

  "config.trigger.mouse_before":                   { "message": "When an URI text is" },
  "config.trigger.mouse.ignore":                   { "message": "(ignore mouse events)" },
  "config.trigger.mouse.dblclick":                 { "message": "Double-clicked" },
  "config.trigger.mouse.dblclick.accel":           { "message": "Ctrl + Double-clicked" },
  "config.trigger.mouse.dblclick.accel.mac":       { "message": "⌘ + Double-clicked" },
  "config.trigger.mouse.dblclick.accel.shift":     { "message": "Ctrl + Shift + Double-clicked" },
  "config.trigger.mouse.dblclick.accel.shift.mac": { "message": "⌘ + Shift + Double-clicked" },
  "config.trigger.mouse.dblclick.alt":             { "message": "Alt + Double-clicked" },
  "config.trigger.mouse.dblclick.alt.shift":       { "message": "Alt + Shift + Double-clicked" },
  "config.trigger.mouse.dblclick.shift":           { "message": "Shift + Double-clicked" },
  "config.trigger.mouse_after":                    { "message": "," },

  "config.trigger.key_before":                { "message": "or" },
  "config.trigger.key.ignore":                { "message": "(ignore key events)" },
  "config.trigger.key.enter":                 { "message": "Enter is pressed with text selecting" },
  "config.trigger.key.enter.accel":           { "message": "Ctrl + Enter is pressed with text selecting" },
  "config.trigger.key.enter.accel.mac":       { "message": "⌘ + Enter is pressed with text selecting" },
  "config.trigger.key.enter.accel.shift":     { "message": "Ctrl + Shift + Enter is pressed with text selecting" },
  "config.trigger.key.enter.accel.shift.mac": { "message": "⌘ + Shift + Enter is pressed with text selecting" },
  "config.trigger.key.enter.alt":             { "message": "Alt + Enter is pressed with text selecting" },
  "config.trigger.key.enter.alt.shift":       { "message": "Alt + Shift + Enter is pressed with text selecting" },
  "config.trigger.key.enter.shift":           { "message": "Shift + Enter is pressed with text selecting" },
  "config.trigger.key_after":                 { "message": "," },

  "config.action_before":        { "message": "" },
  "config.action.blank":         { "message": "do nothing." },
  "config.action.select":        { "message": "select it." },
  "config.action.current":       { "message": "load it in the Current Tab." },
  "config.action.window":        { "message": "load it in a New Window." },
  "config.action.tab":           { "message": "load it in a New Foreground Tab." },
  "config.action.tabBackground": { "message": "load it in a New Background Tab." },
  "config.action.copy":          { "message": "copy it to the clipboard" },
  "config.action_after":         { "message": "" },

  "config.actions.default": { "message": "Reset" },


  "config.menu.caption":       { "message": "Context Menu Items" },
  "menu.single.description":   { "message": " (for single URI)" },
  "menu.multiple.description": { "message": " (for multiple URIs)" },

  "config.advanced.caption":           { "message": "Advanced" },
  "config.detection.group":            { "message": "URI Detection" },
  "config.scheme":                     { "message": "Recognize text which starts with following parts, as URI: (ex. \"http,ftp,mailto\")" },
  "config.scheme.default":             { "message": "Reset" },
  "config.scheme.fixup.table":         { "message": "Fix up broken URI, with following rules: (ex. \"ttp=>http,ttps=>https\")" },
  "config.scheme.fixup.table.default": { "message": "Reset" },
  "config.relative.enabled":           { "message": "Parse relative paths (unrecommended)" },
  "config.multibyte.enabled":          { "message": "Parse multi-byte characters" },
  "config.multiline.enabled":          { "message": "Parse URIs split in multiple lines (unrecommended)" },
  "config.idn.enabled":                { "message": "Parse IDN(Internationalized Domain Names)s for URIs starts with" },
  "config.idn.scheme.default":         { "message": "Reset" },
  "config.i18nPath.enabled":           { "message": "Parse non-ASCII paths" },
  

  "config.debug.caption": { "message": "Development" },
  "config.debug.label": { "message": "Debug mode" }
}
